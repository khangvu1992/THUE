package com.example.thuedientu.controller;

import com.example.thuedientu.model.HashFile;
import com.example.thuedientu.repository.FileRepository;
import com.example.thuedientu.service.DatabaseServiceNew;
import com.example.thuedientu.service.FileUploadService;
import com.example.thuedientu.util.DownloadManager;
import com.example.thuedientu.util.ImportTask;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;

@RestController
@RequestMapping("/api/excel1_jdbc_new")
@CrossOrigin(origins = "*")
public class DatabaseControllerNew {

    private static final String TEMP_DIR_PATH = "D:\\excel-import-temp\\";

    @Autowired
    private FileRepository fileRepository;


    @Autowired
    private DatabaseServiceNew databaseServiceNew;

    @Autowired
    private FileUploadService fileUploadService;

    @Autowired
    private DownloadManager downloadManager; // ‚úÖ s·ª≠ d·ª•ng h√†ng ƒë·ª£i

    @PostMapping("/import")
    public ResponseEntity<String> importExcel(@RequestParam("file") MultipartFile file) {
        try {
            // 1. T√≠nh hash c·ªßa file
            String fileHash = fileUploadService.generateFileHash(file);



            // 2. Ki·ªÉm tra file ƒë√£ upload ch∆∞a
            if (fileUploadService.checkForDuplicateByContent(file)) {
                return ResponseEntity.badRequest().body("‚ùå File ƒë√£ t·ªìn t·∫°i tr∆∞·ªõc ƒë√≥.");
            }

            // 3. T·∫°o th∆∞ m·ª•c t·∫°m n·∫øu ch∆∞a c√≥
            File tempDir = new File(TEMP_DIR_PATH);
            if (!tempDir.exists()) tempDir.mkdirs();

            // 4. T·∫°o file m·ªõi v√† l∆∞u d·ªØ li·ªáu t·ª´ MultipartFile
            String fileName = "import_" + System.currentTimeMillis() + ".xlsx";
            File savedFile = new File(tempDir, fileName);
            file.transferTo(savedFile);

            System.out.println("üìÅ File saved at: " + savedFile.getAbsolutePath());

            // 5. T·∫°o ƒë·ªëi t∆∞·ª£ng HashFile
            HashFile hashFile = new HashFile();
            hashFile.setFilename(file.getOriginalFilename());
            hashFile.setFileHash(fileHash);

            // 6. ƒê∆∞a v√†o h√†ng ƒë·ª£i x·ª≠ l√Ω n·ªÅn
            ImportTask importTask = new ImportTask(savedFile, hashFile, databaseServiceNew);
            String fileId = hashFile.getFileHash();
            downloadManager.enqueue(fileId, importTask);


            return ResponseEntity.ok("‚úÖ File ƒë√£ ƒë∆∞·ª£c ƒë∆∞a v√†o h√†ng ƒë·ª£i x·ª≠ l√Ω.");
        } catch (IOException e) {
            e.printStackTrace();
            return ResponseEntity.status(500).body("L·ªói khi l∆∞u file: " + e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(500).body("L·ªói h·ªá th·ªëng: " + e.getMessage());
        }
    }
}
