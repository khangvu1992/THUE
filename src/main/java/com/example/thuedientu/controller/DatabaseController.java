package com.example.thuedientu.controller;

import com.example.thuedientu.model.HashFile;
import com.example.thuedientu.repository.FileRepository;
import com.example.thuedientu.service.DatabaseService;
import com.example.thuedientu.service.ExcellmportService;
import com.example.thuedientu.service.FileUploadService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.CacheManager;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.cache.CacheManager;
import org.springframework.beans.factory.annotation.Autowired;

import java.io.File;
import java.io.IOException;

@RestController
@RequestMapping("/api/excel1_jdbc")
@CrossOrigin(origins = "*")
public class DatabaseController {


    @Autowired
    private FileRepository fileRepository;

    @Autowired
    private FileUploadService fileUploadService;

    @Autowired
    private DatabaseService excelImportService;

    // API ƒë·ªÉ t·∫£i l√™n file Excel
    @PostMapping("/import")
    public ResponseEntity<String> importExcel(@RequestParam("file") MultipartFile file) {
        File tempFile = null;

        try {
//             Ki·ªÉm tra xem file c√≥ tr√πng l·∫∑p hay kh√¥ng d·ª±a tr√™n hash
            if (fileUploadService.checkForDuplicateByContent(file)) {
                return ResponseEntity.badRequest().body("Duplicate file detected. Upload canceled.");  // N·∫øu tr√πng l·∫∑p, kh√¥ng t·∫£i l√™n
            }

            // N·∫øu kh√¥ng tr√πng l·∫∑p, l∆∞u t√™n file v√†o c∆° s·ªü d·ªØ li·ªáu
            HashFile hashFile = new HashFile();
            hashFile.setFilename(file.getOriginalFilename());
            hashFile.setFileHash(fileUploadService.generateFileHash(file));  // Set the hash




            try {

                // 1. ƒê∆∞·ªùng d·∫´n c·ªë ƒë·ªãnh
                String tempDirPath = "D:\\excel-import-temp\\";
                File tempDir = new File(tempDirPath);
                if (!tempDir.exists()) {
                    tempDir.mkdirs(); // t·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a t·ªìn t·∫°i
                }

                // 2. T·∫°o file m·ªõi trong th∆∞ m·ª•c ƒë√≥
                String fileName = "import_" + System.currentTimeMillis() + ".xlsx";
                File safeTempFile = new File(tempDir, fileName);
                file.transferTo(safeTempFile); // copy d·ªØ li·ªáu t·ª´ MultipartFile v√†o file th·∫≠t

                System.out.println("üìÅ File saved at: " + safeTempFile.getAbsolutePath());

//
//                // T·∫°o file t·∫°m ƒë·ªÉ x·ª≠ l√Ω
//                tempFile = File.createTempFile("myTemp", ".xlsx"); // or .txt depending on your use
//                System.out.println("Temp file created at: " + tempFile.getAbsolutePath());
//                file.transferTo(tempFile);  // Chuy·ªÉn d·ªØ li·ªáu t·ª´ MultipartFile v√†o temp file

                // G·ªçi service ƒë·ªÉ import d·ªØ li·ªáu t·ª´ file Excel
                excelImportService.import1Datbase1JDBC1(safeTempFile,hashFile);
// Now accessible here
                System.out.println("den day la eeeeeeeeeeeeeeeeeeeeeluu");

//                fileRepository.save(hashFile);


                return ResponseEntity.ok("File Excel ƒë√£ ƒë∆∞·ª£c nhjjjjjjjjjjjh·∫≠p th√†nh c√¥ng.");
            } catch (IOException e) {
                e.printStackTrace();
                return ResponseEntity.status(500).body("L·ªói khi x·ª≠ l√Ω file: " + e.getMessage());
            } finally {

                if (tempFile != null && tempFile.exists()) {
//                    tempFile.delete(); // X√≥a file t·∫°m sau khi x·ª≠ l√Ω
                }
            }

        } catch (Exception e) {
            return ResponseEntity.status(500).body("Error uploading file: " + e.getMessage());  // Tr·∫£ v·ªÅ l·ªói n·∫øu c√≥ ngo·∫°i l·ªá
        }
    }


}
